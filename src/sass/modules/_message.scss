@use '../function' as *;
@use '../settings';
@use 'sass:color';

@mixin roolith-message() {
    .message {
        font-size: rem(14);
        line-height: rem(18);
        padding: rem(17) rem(20);
        border-radius: var(--r-message-radius);
        margin-top: rem(10);
        margin-bottom: rem(10);
        background: var(--r-color-light-darken-2);
        position: relative;
        text-align: left;
    }

    .message-extra-pad {
        padding: rem(27) rem(30);
    }

    .message-close {
        position: absolute;
        right: 0;
        top: 0;
        transform: translate(30%, -30%);
        display: inline-block;
        border: none;
        text-align: center;
        font-size: rem(10);
        line-height: var(--r-message-color-icon-size);
        width: var(--r-message-color-icon-size);
        height: var(--r-message-color-icon-size);
        padding: 0 0 0 rem(1);
        z-index: 2;
        cursor: pointer;
        border-radius: 50%;
        background: var(--r-color-light-darken-10);
        color: var(--r-color-dark);
    }

    @each $name, $value in settings.$colors {
        @if ($name != white) {
            .message-#{'' + $name} {
                background: $value;
                background: linear-gradient(to bottom, color-lighten(var(--r-color-#{$name}), 5%) 0%, $value 100%);
                color: var(--r-color-white);

                .message-close {
                    background: color-darken(var(--r-color-#{$name}), 10%);
                    color: var(--r-color-white);
                }
            }
        }
    }

    @each $name, $value in settings.$colors {
        @if ($name != white) {
            .message-#{'' + $name}-outline {
                background: transparent;
                color: var(--r-color-#{$name});
                border: rem(1) solid var(--r-color-#{$name});
                padding: rem(14) rem(17);
            }
        }
    }
}
